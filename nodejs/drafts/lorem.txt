Nulla facilisi. Ut porttitor sollicitudin nisi, tempus pulvinar nisl volutpat aliquet. Phasellus posuere auctor accumsan. Ut in odio eget dui pulvinar sollicitudin. Sed vitae tortor nibh. Aenean nec sapien quam, sit amet dapibus lorem. Phasellus ac pharetra tellus. Curabitur pretium eros sit amet nisl pretium mollis.

border-style: solid;
    border-width: 2px;
    border-radius: 2px;
    border-top-color: white;
    border-left-color: white;
    border-bottom-color: darkgray;
    border-right-color: darkgray;
        background-color: lightgrey;

setTimeout(function(){
            $("#title_bar").toggleClass("intro");
            $(".content").toggleClass("outro");
         }, 500);
         setTimeout(function(){
            $("#title_bar").toggleClass("intro");
            $(".content").toggleClass("outro");
         }, 2000);

//$scope.boreLog = initBoreLog();
    $scope.boreLog = {
        customerName: "",
        conduit: "",
        location: "",
        lengthOfBore: "",
        date: "",
        locates: []
    };

    //Singleton pattern
    var Singleton = (function () {
        var instance;
        function BoreLog() {
            this.customerName = "";
            this.conduit = "";
            this.location = "";
            this.lengthOfBore = "";
            this.date = "";
            this.locates = [];
        }
        function init() {
            return new BoreLog();
        }
        return {
            getInstance : function(){
                if (!instance) {
                    instance = init();
                }
                return instance;
            }
        };
    })();

    function initBoreLog() {
        return {
            customerName: "",
            conduit: "",
            location: "",
            lengthOfBore: "",
            date: "",
            locates: []
        };//end return
    }//end initBoreLog

    //$scope.boreLog = Singleton.getInstance();

    //-- Setters
    $scope.setCustomerName = function(userInput){
        $scope.boreLog.customerName = userInput;
    };
    $scope.setLocation = function(userInput){
        $scope.boreLog.location = userInput;
    };
    $scope.setConduit = function(userInput){
        $scope.boreLog.conduit = userInput;
    };
    $scope.setLengthOfBore = function(userInput){
        $scope.boreLog.lengthOfBore = userInput;
    };
    $scope.setDateOfBore = function(userInput){
        $scope.boreLog.date = userInput;
    };

    //-- Manipulating the list of locates
    $scope.addBoreLogLocate = function (locate) {
        $scope.boreLog.locates.push(locate);
    };
    $scope.removeBoreLogLocate = function(index) {
        $scope.boreLog.locates.splice(index, 1);
    };


            this.logIt = function(){console.log("Controller created");};
            $scope.logIt = logIt();

            self = this;
            this.customerName = "";
            this.conduit = "";
            this.location = "";
            this.lengthOfBore = "";
            this.date = "";
            this.locates = [];

            var toggleContent = function(){
                jQuery(".content").toggleClass("outro");
                jQuery("#scratchPad").toggleClass("hidden");
            };

            $scope.customerPrompt = function(){
                console.log("customerPrompt called");
                toggleContent();
                Prompt.render("Customer", "Who&#32;is&#32;this&#32;job&#32;for?", customer, toggleContent);
            };

            var customer = function(userInput) {
                self.customerName = "Customer: " + userInput;
                setTimeout(function(){
                    Prompt.render("Conduit", "(No.)&#32;Size&#32;Kind", description, toggleContent);
                }, 100);
            };
            var description = function(userInput) {
                self.conduit = "Description: " + userInput;
                setTimeout(function(){
                    Prompt.render("Location", "Location&#32;of&#32;the&#32;job", location, toggleContent);
                }, 100);
            };
            var location = function(userInput) {
                self.location = "Location: " + userInput;
                setTimeout(function(){
                    Prompt.render("Length&#32;of&#32;bore", "Total&#32;footage&#32;(length&#32;of&#32;rods)", lengthOfBore, toggleContent);
                }, 100);
            };
            var lengthOfBore = function(userInput) {
                self.length = "Length of Bore: " + userInput;
                self.date = "Date: " + new Date(Date.now());
                var message = self.customerName + "<br>" +
                    self.date + "<br>" + self.location + "<br>" +
                    self.conduit + "<br>" + self.length;
                setTimeout(function(){
                    MyAlert.render("Bore summary", message, otherCrap);
                }, 100);
            };
            var otherCrap = function(){
                setTimeout(function(){
                    window.localStorage.setItem(self.date + "-" + self.location, JSON.stringify(self));
                    MyAlert.render("The rest is yet to come", "Someday...", toggleContent);
                }, 100);
            }

    var customer = function (userInput) {
        $scope.customerName = "Customer: " + userInput;
        console.log(userInput + " " + $scope.customerName);
        var ngMod = "ng-model=\"conduit\"";
        setTimeout(function () {
            var prompt = new CustomPrompt(ngMod, "Conduit", "(No.)&#32;Size&#32;Kind",
                description, toggleContent);
            prompt.render();
        }, 100);
    };
    var description = function (userInput) {
        //self.conduit = "Description: " + userInput;
        setTimeout(function () {
            Prompt.render("Location", "Location&#32;of&#32;the&#32;job", location, toggleContent);
        }, 100);
    };
    var location = function (userInput) {
        self.location = "Location: " + userInput;
        setTimeout(function () {
            Prompt.render("Length&#32;of&#32;bore", "Total&#32;footage&#32;(length&#32;of&#32;rods)", lengthOfBore, toggleContent);
        }, 100);
    };
    var lengthOfBore = function (userInput) {
        self.length = "Length of Bore: " + userInput;
        self.date = "Date: " + new Date(Date.now());
        var message = self.customerName + "<br>" +
            self.date + "<br>" + self.location + "<br>" +
            self.conduit + "<br>" + self.length;
        setTimeout(function () {
            MyAlert.render("Bore summary", message, otherCrap);
        }, 100);
    };
    var otherCrap = function () {
        setTimeout(function () {
            window.localStorage.setItem(self.date + "-" + self.location, JSON.stringify(self));
            MyAlert.render("The rest is yet to come", "Someday...", toggleContent);
        }, 100);
    }

    $scope.noFade = function(elem){
        jQ(elem).removeClass("fade");
    };

    $scope.fade = function(elem){
        jQ(elem).addClass("fade");
    };

    From routes.js

    var title;
    var header;
    var customString;

    app.resource("users", require("./users.js"), null);

    app.get("/", function(req, res){
        title = "Root page";
        header = "Welcome to Home!";
        customString = "I hope this all pays off!";
        res.render("standard", {title:title, headerOne: header, message: customString});
    });

    //-- Show whatever page number comes after "/page/" (ie /page/123)
    app.get("/page/:number", function(req, res){
        var obj = {
            tit:"Page",
            head:"Page Requested:",
            mess:"Page No. " + req.params.number
        };
        res.render("standardUpDir", {title:obj.tit, headerOne:obj.head, message:obj.mess});
    });

    //-- Show the client IP Address
    app.get("/my-ip/", function(req, res){
        title = "IP";
        header = "My IP Address";
        customString = req.ip;
        res.render("standardUpDir", {title:title, headerOne:header, message:customString});
    });

    //-- Show a "Hello :name" message for "/name/:name"
    app.get("/name/:name", function(req, res){
        var name = req.params.name;
        customString = "It\'s great to meet you, " + nameCaps(name) + "!";
        title = "Hello!";
        header = "Hi!";
        res.render("standardUpDir", {title:title, headerOne:header, message:customString});
    });

    app.get("/includes", function(req, res) {
        res.render("includes");
    });

    app.get("/inherit", function(req, res){
        res.render("./learning/content");
    });

    //-- Learning angular.js
    app.get("/angular", function(req, res){
        res.render("angular-test");
    });

    //-- Testing
    app.get("/profile", function(req, res){
        res.render("profile");
    });

    app.get("/login", function(req, res){
        var firstName = req.query.firstName;
        var lastName = req.query.lastName;
        res.send("Greetings, " + firstName + " " + lastName + "!");
    });

    //: a(ng-href="{{$parent.item.link}}")
                //h3 Apps
                //   h4: a(href="/borelogger") BoreLogger
                //   h4: a(href="/") MudMixer
                //h3 Resources
                //   h4: a(href="http://www.ditchwitch.com/") Ditch Witch
                //   h4: a(href="http://www.baroididp.com/idp/default.page") Baroid


  /*-webkit-animation-delay 0s*/
  /*-moz-animation-delay 0s*/
  /*-ms-animation-delay 0s*/
  /*animation-delay 0s*/


  /*-webkit-transform rotate(1080deg)*/
  /*-moz-transform rotate(1080deg)*/
  /*-ms-transform rotate(1080deg)*/
  /*transform rotate(1080deg)*/
  /*-webkit-transition-duration 3s*/
  /*-moz-transition-duration 3s*/
  /*-ms-transition-duration 3s*/
  /*transition-duration 3s*/

  /*-ms-animation-name drill*/
  /*-moz-animation-name drill*/
  /*animation-name drill*/


    /*img:hover*/
      /*globalImageHovered()*/